---
name: ci
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  example:
    environment: integration
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - ubuntu-24.04-arm
        storage:
          - s3://tansu/
          - postgres://postgres:postgres@db
        kafka:
          - apache/kafka:3.9.0
        tansu:
          - ghcr.io/tansu-io/tansu:main
          - ghcr.io/tansu-io/tansu:latest
    runs-on: ${{matrix.os}}
    env:
      ADVERTISED_LISTENER_URL: tcp://tansu:9092
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_ALLOW_HTTP: true
      AWS_DEFAULT_REGION: auto
      AWS_ENDPOINT: http://minio:9000
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      CLUSTER_ID: kafka-python-integration
      KAFKA_IMAGE: ${{matrix.kafka}}
      PROMETHEUS_LISTENER_URL: tcp://localhost:9100
      RUST_BACKTRACE: 1
      RUST_LOG: warn,tansu_server=debug,tansu_storage=debug,tansu_schema_registry=debug
      STORAGE_ENGINE: ${{matrix.storage}}
      TANSU_IMAGE: ${{matrix.tansu}}
    steps:
      - uses: actions/checkout@v4
      - run: docker compose --ansi never --progress plain up --no-color --quiet-pull --detach
      - run: docker compose --ansi never exec minio /usr/bin/mc ready local
      - run: docker compose --ansi never exec minio /usr/bin/mc alias set local http://localhost:9000 ${{ secrets.AWS_ACCESS_KEY_ID }} ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - run: docker compose --ansi never exec minio /usr/bin/mc mb local/tansu
      - run: sudo apt-get update
      - run: sudo apt-get install -y bats
      - run: docker compose exec db /usr/bin/pg_isready --timeout=60
      - run: docker compose ps -a --format '{{.ID}}\t{{.Service}}'
      - run: docker compose exec kafka cat /etc/hosts
      - run: docker compose exec kafka ping -c 6 tansu
      - run: docker compose exec kafka ping -c 6 minio
      - run: bats --trace --verbose-run tests
